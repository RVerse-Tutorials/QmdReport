---
always_allow_html: true
---

```{r warning=FALSE, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
library(knitr)
library(kableExtra)
library(xtable)
library(flextable)
library(dplyr)
```

# Tables intro

This chapter shows a few simple examples of including tables and getting cross-referencing to work across formats (HTML, Word, PDF). See @kableflexgt for more examples and comparisons of different table outputs.



## `kableExtra` table

This is an example `kableExtra` table. We can reference @tbl-tbl1 easily and it is auto-numbered. See the Code link at top (HTML output).

```{r}
#| echo: true
#| label: tbl-tbl1
#| tbl-cap: "This is a table with a number. Getting the auto-numbering to work is different with Quarto. See the code."
dt <- mtcars[1:5, 1:3]
kbl(dt, booktabs = TRUE) %>%
  kable_styling(latex_options = c("scale_down"))
```

When we are creating reports, we might not know how big the table will be ahead of time and we might be adding columns. We would like output to still look ok. Here `kbl` shines for PDF output. Look at @tbl-kable-scale in the PDF.

```{r}
#| label: tbl-kable-scale
#| tbl-cap: "Showing how kable can scale a big table. Look at the PDF"
kbl(cbind(mtcars, mtcars), booktabs = TRUE) %>%
  kable_styling(latex_options = c("scale_down"))
```

## flextable

This is an example {flextable} table. We can reference @tbl-flexexample easily and it is auto-numbered. 

```{r}
#| label: tbl-flexexample
#| tbl-cap: "This is a flextable."
flextable(dt) %>%
  font(fontname="Times New Roman", part="all") %>%
  fontsize(size=12)
```

## Including table files

It is often good to have your files in separate files so that when you edit your tables, you only have to work on the table code.

````markdown
`r ''````{r child=here::here("tables", "Table_flex.Rmd")}
```
````

```{r child=here::here("tables", "Table_flex.Rmd")}
```


## Cross-references

In Quarto, [table links](https://quarto.org/docs/authoring/cross-references.html#tables) use the table label `@tbl-tablabel` where `tablabel` is the label you put on the table chunk. In the text it looks like this @tbl-tablabel. The chunk yaml looks like this

```
#| label: tbl-tablabel
#| tbl-cap: "my caption"
```

```{r}
#| label: tbl-tablabel
#| tbl-cap: "This is a table with a number."
dt <- mtcars[1:5, 1:3]
kbl(dt, booktabs = TRUE) %>%
  kable_styling(latex_options = c("scale_down"))
```

## Dynamic table captions

You can create captions dynamically.

```{r}
#| echo: true
tbl_cap <- paste("This is a dynamically created caption. The length of mtcars is", nrow(mtcars), "rows")
```

Unfortunately you cannot dynamically create your chunk labels too.

```{r}
#| label: tbl-test3
#| tbl-cap: !expr tbl_cap
kbl(mtcars[1:10,], booktabs = TRUE) %>%
  kable_styling(latex_options = c("scale_down"))
```

