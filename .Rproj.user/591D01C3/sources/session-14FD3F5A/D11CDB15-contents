---
always_allow_html: true
---
# Tables in a for loop

```{r warning=FALSE, echo=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
source(here::here("tables", "_common.R"))
```


Outputting tables (or figure) in a for loop works fine in Quarto, but there is no way to set the table numbers dynamically and get all the cross-references working in Word, HTML and PDF. We really need that dynamic numbering and cross-reference feature in a big report. The for loop approach works fine for output to PDF but not HTML or Word and we want everything to just work across output formats.

Example of a table in a for loop where the cross-referencing is gone in HTML; note, it'll look fine in PDF and in Word, you'll see Table X on the tables but they are the wrong numbers. Click on the code to see the trick for using `knit_print()` within the for loop to get your output to show up.

```{r results='asis'}
#| echo: true
for(cyl in c(4,8)){
  val <- paste("Cars with", cyl, "cylinders. Created with flextable. We could use set_caption, but the numbers won't show up correctly in HTML and Word. And we don't have cross-ref links.")
  dt <- mtcars[,1:4] %>%
    filter(cyl == cyl) %>%
    head(2)
  if(table.engine=="flextable"){ 
    tab <- myflextable(dt)
    tab <- add_footer_row(tab, values = val, colwidths = ncol_keys(tab))    
  }
  if(table.engine=="kbl") 
    tab <- mykbl(dt) %>%
      kableExtra::footnote(general = val)
  cat(knitr::knit_print(tab))
}
```

## Getting the cross-reference links

We have to use a bit of magic to get our dynamic table numbers and links using Quarto's cross-referencing. The trick is to use a child Rmd (or qmd) in a for loop. This trick can be used for figures too but I'll just show it here with tables. This code inspired from [this gist](https://gist.github.com/rmoff/a043676a2f084b81a434).

We use `knit_expand()` and make a child Rmd that uses double curly braces like `{{value.to.match}}` in the code. That way the value at the time this Rmd was embedded can be referenced. Note that if `value.to.match` were a string (which it is not in this example), we would need to add quotes around `{{value.to.match}}` in our code.

With this approach we get our numbered tables and we can reference the tables usual such as @tbl-cyl8. Click on the Code link at top (HTML output) to see how it's done.

```{r include=FALSE}
#| echo: true
out = NULL
for (value.to.match in c(4,8)) {
  out = c(out, knit_expand(here::here('tables', 'Table_for_child.Rmd')))
}
```
`r paste(knit(text = out), collapse = '\n')`

```{=openxml}
<w:p><w:r><w:br w:type="page"/></w:r></w:p>
```
