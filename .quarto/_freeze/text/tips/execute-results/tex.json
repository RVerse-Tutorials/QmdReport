{
  "hash": "0d6bb92a224221f76c195f9719e4463f",
  "result": {
    "markdown": "# Tips\n\n\n## Overview \n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![chapter 1 plot](tips_files/figure-pdf/fig-chinook-1.pdf){#fig-chinook}\n:::\n:::\n\n\n\n\n\n\n## General set-up\n\n* Be as modular and simple as you can. \n\n* Don't make everyone in your team be the markdown wizard. You only need one person to build the framework.\n* Use simple child Rmds so that other team members work only on simple Rmd/qmd flat files.\n* Don't put all your tables or figures in one huge file: `Table xyz.Rmd/qmd`, `Table abc.Rmd/qmd`. Have your dedicated markdown wizard figure out the automatic numbering.\n* Copy reports built by others who are doing something similar to you. TALK within your center or across centers and share work.\n\n## Tips\n\n### Cross-references\n\nThis can be really troublesome unless you use an output that already has cross-references as part of the design. For R Markdown,\n\n* {bookdown} outputs for html and PDF\n* {officedown} for Word\n\nThese output formats give you access to cross-referencing via the `\\@ref(xxx:yyy)` format and if you use `bookdown::pdf_book`, this will also work with PDF.\n\nHowever, Quarto makes cross-references, auto-numbering and cross-referencing of tables and figures super easy. [Quarto cross-ref page](https://quarto.org/docs/authoring/cross-references.html).\n\nFor example, we can make a figure with the chunk label `fig-plot` like so.\n\n\n\n\n\n\nThe later in the text we use `@fig-plot` to get @fig-plot.\n\n::: {.cell}\n::: {.cell-output-display}\n![This is a plot of some data](tips_files/figure-pdf/fig-plot-1.pdf){#fig-plot}\n:::\n:::\n\n\n### Chunk labels\n\n* When using R Markdown (or Quarto), it is best not to use chunk labels in the your Rmd/qmd children. It's too easy to get duplicate labels accidentally.\n\n### File paths\n\n* if you need to reference a file in a folder, let R create the path so that it is compatible across systems:\n```\nfile.path('figures', 'figure1.Rmd')\n```\n* I typically use the {here} package so that my code doesn't break if I happen to issue a change workspace directory command.\n```\nhere::here('images', 'logo.png')\n```\n\n### Tables in for loops\n\nMaking tables within `for` loops is tricky and it is different if you are outputting to Word versus html and also depends on what package that you use. See my Rmd/qmd files in the tables folder for examples of how to set it up, but also be prepared for things breaking in the future as package writers change things. This feature is really fluid. Web searches on stackoverflow are key for solving these problems.\n\n## Working with Word\n\nFor many of us, Word is part of our team's workflow. Here are some tips if that is the case for you:\n\n* Check out the [officeverse](https://ardata-fr.github.io/officeverse/index.html): [officedown](https://CRAN.R-project.org/package=officedown) and [flextable](https://CRAN.R-project.org/package=flextable) R packages.\n* Quarto has greatly [improved Word](https://quarto.org/docs/output-formats/ms-word.html) integration so many of the problems we faced with Word output may soon be solved.\n* Don't build the whole report in one file. Work on individual text sections and then have RStudio (via pandoc/knitr) assemble the report (text, figures, tables) from the individual parts.\n* How to deal with the team needing to review the assembled document (text, figures, tables):\n  * Try to modularize. So maybe make individual chapters and have review happen at that level. Then you incorporate the changes into the plain text manually.\n  * Use templates to make your Word doc look the way you want. The default Word template is bare bones. See my example and read about using Word templates with Quartro [here](https://quarto.org/docs/output-formats/ms-word-templates.html) and R Markdown [here](https://bookdown.org/yihui/rmarkdown-cookbook/word-template.html) .\n  \n\n### Making tables look nice in Word\n\nThe example in `Table_Counts.Rmd` and `Table_Counts_flex.Rmd` shows you tricks to make nice Word tables.\n\n* how to include a page break in your Word doc between tables. \n* using `format=\"pandoc\"` for the table\n* using `results='asis'` and `print()` so you can use `for` loops.\n* centering your tables is next to impossible with `kable()`. Use the {[flextable](https://ardata-fr.github.io/flextable-book/)} package if you need that.\n\n### New pages\n\nThis is how to get a new page in Word. Make sure you are in print view on the word doc, otherwise you won't see any of the pages.\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n````\n```{=openxml}\n<w:p><w:r><w:br w:type=\"page\"/></w:r></w:p>\n```\n````\n:::\n:::\n\n## Output templates with Quarto\n\nQuarto is working on templates to make output to different formats easy. Here is an example of journal templates [quarto-journals](https://github.com/quarto-journals/).\n\n## Weird Quarto quirks\n\n* If you use \n```\n---\ntitle: MyTitle\n---\n```\nas your title spec, then you won't get the first header 2 in your pdf. Use `# ` instead.\n\n* If you have 2 `# ` levels in a qmd file, you only the first chapter appearing in the TOC. The others appear weirdly as sub-chapters.\n\n* with flextable, your table captions from knitr yaml disappear if the table breaks across a page.\n\n```{=openxml}\n<w:p><w:r><w:br w:type=\"page\"/></w:r></w:p>\n```\n\n\n",
    "supporting": [
      "tips_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}